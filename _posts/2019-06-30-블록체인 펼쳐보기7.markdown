---
layout:     post
title:      블록체인 펼쳐보기 - 7
author:     bcnote3314
tags: 		blockchain 블록체인펼쳐보기
subtitle:  블록체인 정복기	
category: Block
---

# 블록체인 펼쳐보기 - Chapter 07

블록체인 펼쳐보기 챕터 7에 대한 내용 정리

## 공개키 주소(publickey address)

공개키는 주소의 길이가 길기 때문에 실 거래에서 직접적으로 사용되는 경우는 드물다.
자주 사용하는 방식은 공개키를 다시 해시하여 길이를 줄여서 사용하는 것이다.

비트코인에서는 RSA보다 더 안전한 타원곡선암호(ECC)방식을 사용한다. 
ECC의 공개키는 두개의 256비트값으로 정의되어있고 유형을 구분하기 위한 8비트를 합쳐서 총 520비트(65바이트)가 하나의 공개키이다.

![공개키1](http://drive.google.com/uc?export=view&id=1v_mbQJpRUN6lZZvd7yJpm9Z4DYbEd2X7)

전 챕터에서 말한대로 Transaction ID와 출력 ID를 포함하여 개인키로 암호화 하는 것으로 모든 정보가 공개된 블록체인 상에서 나를 증명할수 있다.
공개키 주소 기반 거래에서는 이러한 비대칭 암호를 사용하여 안전한 거래와 익명성을 지원하는 것이 기본 동작 이지만 키의 길이가 520비트로 너무 길고 오류 보정 기능이 없어 사용자가 그대로 사용하기엔 불편하다.

그래서 현재는 채굴보상금을 지급하는 코인베이스 거래(채굴을 통하여 생성된 거래, 이전 내용이 없는 거래)에서만 공개키 방식을 사용한다.
블록에 하나밖에 없으며 공간의 낭비도 크지 않으며 네트워크 상에서 프로그램에 의하여 처리되기 때문에 가독성등을 따질 필요가 없기 때문이다.

## 공개키 해시 주소

코인베이스 외의 일반 거래에서 출력부에 코인을 받는 주소와 잔액 주소를 두개만 적어도 65바이트 두개로 130바이트를 차지하게 된다.
거래기록의 대부분은 이런 주소를 적는 것들이기 때문에 이 길이를 줄이면 블록의 효율을 크게 높일수가 있다.

비트코인 주소는 공개키를 가공하여 짧은 해시 주소를 사용한다.
또한 일상 생활에서 편하게 이용할 수 있는 표현 방법과 오류 보정 코드등을 고려하여 구성했다.

공개키 해시는 520비트 공개키를 두개의 해시함수를 통하여 160비트로 줄였다.
SHA256을 통하여 256비틀 줄이고 RIPEMD-160이라는 해시함수를 사용하여 160비트(20바이트) 값으로 줄였고 일반적으로 출력부에 기록되는 값이 이 공개키 해시 값이다.

하지만 실제 결제시점에 주고받는 비트코인 주소는 이값이 아니라 공개키 해시를 다시한번 가공해서 사람이 쓰게 가공한 값이다.
160비트는 최대값이 2^160^ - 1 로 아주 큰 숫자이다. 컴퓨터에서 계산할때도 특별하게 다뤄지며 일반 사용자가 외우기엔 너무 어려운 값이다.

숫자가 길기 떄문에 인쇄하기도 어렵기 때문에 문자열로 바꿔서 쓰는 방법을 선택했다. 베이스58체크 인코딩을 사용하여 만든 주소이다.
이때 오류 검출을 위한 4바이트 체크썸을 뒤에 붙이고 주소의 유형을 나타내는 1바이트 값을 앞에 붙여서 인코딩을 하여 최종적으로 주소를 만든다. 
(이것은 사람이 쓰기 편하게 하는 용도이다. 내부적으로는 공개키 해시를 쓰며 유저와 컴퓨터 간의 중간에서만 변환해주면 되는 것으로 보인다.)

![공개키2](http://drive.google.com/uc?export=view&id=1nZa-Txb8zhB6vBDMnXjWV6vkZOEkrLf8)

베이스58은 58진수로 표시하는 인코딩 방법으로 사람눈으로 구분하기 쉬운 숫자와 알파벳으로만 구성했다. (0, O, I, i를 제외한 숫자 + 영어 대소문자)

## 비트코인 주소를 이용한 거래의 표현

공개키는 바로 디지털 서명을 해제하여 내용을 볼수 있다. 하지만 공개키 해시는 해시를 통해 나온 결과기 때문에 역방향 계산이 안되며 직접 서명을 풀어서 확인할 수가 없다.

즉 거래 검증의 방법이 달라져야 한다.

![공개키3](http://drive.google.com/uc?export=view&id=17PlJj6Xl_tG6hGHPQPAXX_AhktY1zsXD)

거래 A의 출력에는 공개키 해시가 들어가며 거래 B에 공개키와 서명을 같이 제공하면?
공개키의 이중해시를 통하여 맞는 공개키인지 확인한뒤에 이를 통하여 서명을 확인하는 방법이 있다.
