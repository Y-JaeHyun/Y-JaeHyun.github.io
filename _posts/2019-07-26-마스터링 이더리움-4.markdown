---
layout:     post
title:      마스터링 이더리움 - 4
author:     bcnote3314
tags: 		blockchain Ethereum MasteringEthereum
subtitle:  블록체인 정복기	
category: Block
---

5장 6장 내용은 Low한 내용이 많아 이더리움에 대한 이해가 좀더 생긴후에 다시 봐야할것같다. 정리조차도 어렵다

# 마스터링 이더리움 - 챕터 5

마스터링 이더리움 챕터 5에 관련된 내용 정리  

지갑은 넓은 의미에서 이더리움의 사용자 인터페이스를 제공하는 소프트웨어 애플리케이션이다.  
사용자의 이더에 대한 접근을 통제하고 키와 주소를 관리하며 잔액관리 및 트랜잭션 생성과 서명까지 제어한다.  
또한 ERC20등의 토큰과 상호작용 또한 가능하다.

개발자의 시각에서 지갑은 키를 보관하기 위해 사용하는 시스템이며 이더리움 기반 탈중앙화 애플리케이션의 인터페이스의 일부이거나 DApp의 한부분일 수 있다.

## 지갑의 기술적 요소

지갑의 설계에서 가장 중요한 부분은 사용자의 편의성이다.  
암호화폐 자체가 일반인에게 쉽게 사용하기 어렵게 느껴지기 때문에 편하게 사용할수 있도록 구성되어야 하지만 편하다는 의미에는 보안에 취약하다는 단점이 포함될수 있기 때문에 균형을 잘 맞추는 것이 중요하다.	

이더리움의 지갑은 단순히 키를 관리하는 역할이다.  
토큰이나 이더는 블록체인상에 기록되는 것이며 지갑에 있는 키로 트랜잭션에 서명을 하는 것으로 네트워크 토큰을 제어할뿐 지갑에 종속되지는 않는다.  

지갑에는 크게 두가지 형태가 있다.

- 비결정적 지갑(nondeterministic wallet) : 각기 다른 무작위 수로부터 각각의 키를 무작위로 추출하는 지갑으로 **그냥 열쇠 뭉치(Just a Bunch Of Key)**라는 뜻으로 JBOK라고 불린다.
- 결정적 지갑(deterministic wallet) : 모든 키가 시드(seed)라고 하는 단일 마스터 키로부터 파생된다. 모든 키가 서로 관련이 있으며 키값을 잃어버리더라도 시드를 알고 있따면 다시 파생시킬 수 있다.

결정적 지갑에서 키를 만들기 위하여 사용하는 개념중에 **니모닉 코드 단어** 라는 것이 있다. (메타마스크에서 키 생성시 보여준 단어 조합이다.)  
니모닉 코드 단어는 시드로 사용되는 단어 목록들이며 즉 누군가가 이 단어 조합을 알게된다면 키를 생성하여 이더를 훔쳐갈수 있게 된다.

## HD 지갑(BIP-32/BIP-44)

결정적 지갑은 단일 시드로부터 많은 키를 쉽게 추출하기 위하여 개발되었다.  
현재 가장 개선된 결정적 지갑은 비트모인의 BIP-32 표준으로 정의된 HD(Hierarchical deterministic)지갑이다.  

트리 구조로 부모키가 자식키를 파생시키고 그 자식은 다시 손자키를 파생시키는 구조이다.
이런 트리구조의 장점은 하위 키의 특정 분기는 입금을 받는데 사용하고 다른 분기는 송금후 잔액을 받는데 사용을 하는 목적에 따른 의미 표현이나 부서, 회사, 회계 범주등으로 구분하여 할당한뒤 구조적 의미를 표현하는 것도 가능하다.  
또한 개인키에 접속하지 않고 사용자가 공개키 시퀀스를 만들 수 있다. 즉 읽기 전용 수신 전용의 용도로 개인키가 포함되지 않은 지갑을 제공하는 형태가 가능하다.

## 시드와 니모닉 코드(BIP-39)

니모닉 코드에 생성 과정에 대한 설명이지만, 이부분은 패스. (내용이 난해하다. 아직 내가 이해하기엔 좀 어려움이 있다. 공부하다 필요할때 다시봐보는걸로.)

# 마스터링 이더리움 - 챕터 6

마스터링 이더리움 챕터 6에 관련된 내용 정리  

트랜잭션은 외부 소유 계정(EOA)에 의해 서명된 메세지이다.  
트랜잭션은 이더리움 네트워크에 의하여 전송되고 블록체인에 기록된다. 즉 트랜잭션이 블록체인상에 상태변경을 유발하거나 컨트랙트를 실행할 수 있는 유일한 방법이다.  

## 트랜잭션 구조

트랜잭션은 아래의 데이터를 포함한 바이너리 메세지이다.

- 논스(Nonce) : 발신 EOA에 의해 발행되어 메세지 재사용을 방지하는데 사용되는 일련번호
- 가스 가격(Gas price) : 발신자가 지급하는 가스의 가격(웨이)
- 가스 한도(Gas limit) : 트랜잭션을 위해 구입할 가스의 최대량
- 수신자(recipient) : 목적지 이더리움 주소
- 값(value) : 목적지에 보낼 이더의 양
- 데이터(data) : 가변길이 데이터 페이로드
- v,r,s : EOA의 ECDSA 디지털 서명의 세가지 구성요소

내부 정보를 보여주거나 사용자 인터페이스를 시각화 하기 위해서는 트랜잭션 구조 이외에도 파상된 추가 정보가 필요하다.  
예를들어 발신자 EOA를 식별하는 주소에 발신자 데이터가 없는데 이것은 EOA의 공개키를 ECDSA 서명의 v, r, s 구성 요소로부터 알아낼수 있다.  


## 논스, 가스, ECDSA 등과 관련된 내용

해당 부분은 지갑등의 DApp을 만들때 필요한 부분이다.
Low한 영역까지 나오기 때문에 이더리움에 대한 전반적인 이해가 완료된 이후 추가 공부 예정이다.



