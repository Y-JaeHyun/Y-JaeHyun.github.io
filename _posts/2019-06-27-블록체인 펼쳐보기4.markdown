---
layout:     post
title:      블록체인 펼쳐보기 - 4
author:     bcnote3314
tags: 		blockchain 블록체인펼쳐보기
subtitle:  블록체인 정복기	
category: Block
---

# 블록체인 펼쳐보기 - Chapter 05

블록체인 펼쳐보기 챕터 5에 대한 내용 정리

## 긴 블록체인 선호 정책

블록체인이 채굴되고 전파되는 과정에서 비슷한 시점에 Nonce값을 찾고 전파를 시도하는 노드가 다수 존재할수 있다.
다만 채굴에 대한 보상은 1명에 승리자에게만 제공되기 때문에 다수의 노드중 승리자를 선택해야한다.

비트코인에서는 이를 중재하기 위한 별다른 행위를 하지는 않는다. 단순히 그냥 최종 승리자가 나타날때까지 기다린다. 

블록체인은 체인이 많이 연결되어 있는 것이 신뢰도가 높다고 했다. 즉 전파가 되고있는 체인중에 내가 다음 블럭을 연결하고자 하는 체인은 그중 가장 긴것을 자연스럽게 선택하게 되고 결론적으론 서로 경쟁하다가 가장 길게 연결된 하나의 체인만 살아남게 된다. (모든 노드들은 자신의 이익을 추구하기 때문에 승자로 예측되는 가장 긴 체인을 선호한다.)

이러한 경쟁에서 살아남은 블럭에 보상을 주기 위하여 자신이 생성한 블록의 뒤로 100개의 블록이 연결되어야 채굴보상을 전달하게 된다. (100개 이후에도 분기가 되어있다면??)


## 체인의 분기

분기된 각각의 블록은 상위의 연결된 블록이 동일하다는 점을 제외하고는 모든것이 다른 블록이다.
페이로드도 Nonce값도 모두 다른것이다. (우연히 겹치는 내용이 존재할 수는 있지만)

![체인](http://drive.google.com/uc?export=view&id=1svDb-xMTMJH8kbiq-u6qvFHm4XL96MoK)

나누어진 각 체인은 서로의 영역을 넓히기 위하여 열심히 전도 활동을 할것이다.
그러다 또 전도받은 다른 노드에 의하여 특정 블록(A이라고 가정) 위에 새로운 블록들이 만들어져 갈 것이다.

이때 만약 A가 아닌 블럭에서 새로운 블럭을 만드려고 시도하고 있던 노드가 A블록위에 다른 A+1이라는 새로운 블록이 생성된걸 전파 받는다면, A가 이미 앞서고 있다는 것을 느끼게 될것이고 A+2를 만드는 방향으로 선회하게 될것이다. (어차피 B에 만들어봤자 뒤쳐지고 있는 체인이며 포상을 받지 못할 가능성이 크기 때문이지.)
이런 분기로 인하여 경쟁해서 지고 블록이 더 이상 신뢰를 잃어도 거래가 없어지는 것은 아니다. 해당 블록도 정상적인 블록이며 없어지면 안되는 데이터들이다.
진 블록들의 기록은 무효가 되는 것이 아니라 새로운 채굴을 기다리게 된다. (실제 주식 거래를 할때 판매한 금액이 예치금에서 환전 가능한 돈으로 돌아오기까지 2? 3? 일정도 걸린다. 그것과 마찬가지로 코인의 거래에서도 실제 거래가 완료되어 내가 사용가능하기 까지는 어느정도 시간이 걸릴것이다.)

또한 드물게 분기가 된 블록이 다수가 될수도 있으며 1단계만이 아니라 경쟁 과정에서 길이가 더 길어질 수도 있다. 하지만 이 또한 나중에는 결국 더 많은 수의 노드를 확보하는 하나의 체인으로 수렴하게 될것이다.
이러한 승패를 기다리기 위하여 채굴보상금을 100개의 블록이 쌓인후에 주는 것이다. 

## 분기 수렴 방식의 약점

이런 자율적인 판단으로 승자를 가리는 방식은 노드의 숫자가 적을때에는 일부의 노드들의 담합이 쉽기 때문에 체계를 잡기전에 무너질 수 있다.
하지만 노드수가 많아지면 많아질수록 조작이 어려워지며 안정적으로 유지가 된다.

비트코인 초기에는 화폐로서의 가치를 인정받을수 있다는 판단이 되지 않았기 때문에 이런 담합을 할만한 이유가 없었고 현재는 사용자가 늘고 네트워크 규모가 커지면서 자연스럽게 불안정안 시기를 넘기게 되었다.
현재 블록체인은 분기가 1주일에 한번꼴로 발생한다. 하지만 그 깊이가 1밖에 되지 않으며 그 이상의 깊이는 자주 발생하지 않는다. (약 1달에 한번꼴로 2개짜리 분기가 발생하는 정도)

블록체인은 궁극적으로 모든 노드가 단 하나의 블록체인으로 통일되고 자연스럽게 같은것을 공유하는 구조가 된다. 
이말은 블록체인이 분산 데이터베이스를 대체할 하나의 방안이 될 수 있다는 것이다. 물론 실시간으로 갱신되는 것은 아니기 때문에 어느정도 제약은 있지만 기다릴 여유가 있는 거래에 대해서는 충분히 도입하여 활용할수 있다. 
실제로 분산 데이터베이스를 활용할때 모든 데이터에 대해서 동기화를 바로 수행하지 않으며 일부는 로컬에 있는 데이터만 갱신하고 이후 동기화가 필요한 시점에 한번에 수행하는 형태로 사용된다. (컴퓨터 시스템의 캐시, 메모리, HDD의 동작도 뭔가 비슷한 느낌인데..?)
